name: Deploy to GitHub Pages

on:

  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Show working directory
        run: |
          echo "Current working directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          
      - name: Install dependencies
        run: npm ci
        
      - name: Test webpack directly
        run: |
          echo "Testing webpack directly..."
          echo "Current directory: $(pwd)"
          echo "Node modules:"
          ls -la node_modules/.bin/ | grep webpack
          echo "Testing webpack command:"
          ./node_modules/.bin/webpack --version
          echo "Testing webpack build:"
          ./node_modules/.bin/webpack --mode production --config webpack.config.js
          echo "Webpack direct build completed. Exit code: $?"
          echo "Directory contents after webpack:"
          ls -la
        
      - name: Build application
        run: |
          echo "Starting build process..."
          echo "Current directory: $(pwd)"
          echo "Directory contents before build:"
          ls -la
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          export NODE_ENV=production
          echo "NODE_ENV set to: $NODE_ENV"
          echo "Running npm run build..."
          npm run build
          echo "Build command completed. Exit code: $?"
          echo "Directory contents after build:"
          ls -la
          echo "Checking for dist directory..."
          if [ -d "dist" ]; then
            echo "✅ dist directory created successfully"
            echo "dist directory contents:"
            ls -la dist/
          else
            echo "❌ dist directory not found after build"
            echo "Creating dist directory manually for debugging..."
            mkdir -p dist
            echo "Created dist directory manually"
            exit 1
          fi
          
      - name: Ensure dist directory exists
        run: |
          echo "Final check: Ensuring dist directory exists..."
          if [ ! -d "dist" ]; then
            echo "Creating dist directory as fallback..."
            mkdir -p dist
            echo "Creating minimal index.html..."
            echo '<!DOCTYPE html><html><head><title>RAGtional</title></head><body><h1>RAGtional Landing Page</h1><p>Build in progress...</p></body></html>' > dist/index.html
            echo "Creating .nojekyll file..."
            touch dist/.nojekyll
            echo "Fallback dist directory created with minimal content"
          fi
          echo "Final dist directory contents:"
          ls -la dist/
        
      - name: List build output
        run: ls -la dist/
        
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
        
      - name: Verify build artifacts
        run: |
          echo "Build directory contents:"
          ls -la dist/
          echo "Checking for required files:"
          test -f dist/index.html && echo "✅ index.html exists" || echo "❌ index.html missing"
          test -f dist/bundle.js && echo "✅ bundle.js exists" || echo "❌ bundle.js missing"
          test -f dist/.nojekyll && echo "✅ .nojekyll exists" || echo "❌ .nojekyll missing"
        
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          clean: true
          single-commit: true
          commit-message: "Deploy RAGtional Landing Page - ${{ github.sha }}"
          token: ${{ secrets.GITHUB_TOKEN }}
